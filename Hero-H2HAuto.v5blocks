{"mode":"Blocks","hardwareTarget":"brain","workspace":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable id=\"U`9aA+=)r+L1tzA.)-qi\">myVariable</variable><variable id=\"hdqWwSy0d7BqbM4`qkQF\">YAxis</variable><variable id=\"B#v#oRFoO74Emv,=5EZV\">XAxis</variable><variable id=\"aDGc29F=8xK_ASoeMdQq\">Mach</variable><variable id=\"eN??8+a@9N:diOfJ346R\">StickMode</variable><variable id=\"S]q2|V~)PYF!GTTRDvt)\">Stick2</variable><variable id=\"Qj_T$-EW}fk/f|S?xDIt\">Stick1</variable><variable type=\"broadcast_msg\" id=\"_hG3boWNEspcEn$~R+l.\">message1</variable><variable type=\"broadcast_msg\" id=\";4TJwuZQS5,)%`Ps@Hf#\">DriveMode</variable><variable type=\"broadcast_msg\" id=\"%bT52O?y`dJd%MZhfcqn\">ScriptX</variable><variable type=\"broadcast_msg\" id=\"cnB{?Uw+QrMp`!=::3V8\">ScriptY</variable><variable type=\"boolean\" id=\"oeJSm2`BWs+$FZOQ,$~J\">PusherMove</variable><variable type=\"boolean\" id=\"O@ynq/f2Kw-[i1nM/JS-\">PusherMax</variable><variable type=\"boolean\" id=\"BMu9K1tm6dFbZLjx2dTN\">CraneMax</variable></variables><block type=\"procedures_definition\" id=\",qmAt^BIg:k(SpqZNR}X\" x=\"-150\" y=\"270\"><statement name=\"custom_block\"><shadow type=\"procedures_prototype\" id=\"n}6RyYfteZ99+?[fQ}Da\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" proccode=\"Move Forward\" proceduredefid=\"n}6RyYfteZ99+?[fQ}Da\" argumentids=\"[]\" argumentnames=\"[]\" argumentdefaults=\"[]\" argumenttypes=\"[]\" warp=\"false\"></mutation></shadow></statement><next><block type=\"v5_motion_spin\" id=\"XG5.{-WQ%ZZr5-,}.K=:\"><field name=\"MOTOR\">LeftWheel</field><field name=\"DIRECTION\">fwd</field><next><block type=\"v5_motion_spin\" id=\"ok)Ar$$x?=~+KGP;k~Rb\"><field name=\"MOTOR\">RightWheel</field><field name=\"DIRECTION\">fwd</field></block></next></block></next></block><block type=\"procedures_definition\" id=\"3[+Crno^0!lJA:R-+?=q\" x=\"210\" y=\"270\"><statement name=\"custom_block\"><shadow type=\"procedures_prototype\" id=\"P}a!U3/*9|X*ha:@}tE8\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" proccode=\"Stop Wheels\" proceduredefid=\"P}a!U3/*9|X*ha:@}tE8\" argumentids=\"[]\" argumentnames=\"[]\" argumentdefaults=\"[]\" argumenttypes=\"[]\" warp=\"false\"></mutation></shadow></statement><next><block type=\"v5_motion_stop_motor\" id=\"ntk_dr~Q1uC6I]bC%i+#\"><field name=\"MOTOR\">LeftWheel</field><next><block type=\"v5_motion_stop_motor\" id=\"L6~ZD?[v=4JT}5W}NoC2\"><field name=\"MOTOR\">RightWheel</field></block></next></block></next></block><block type=\"v5_events_when_autonomous\" id=\"i/PDAI88}LQ`UNT-)dC(\" x=\"-210\" y=\"490\"><next><block type=\"v5_motion_spin\" id=\"Vq.98Anu`jhFq+BMB8;=\"><field name=\"MOTOR\">Pusher</field><field name=\"DIRECTION\">fwd</field><next><block type=\"v5_motion_spin_for\" id=\";,4ad2=(yv.Sut#`E:;~\"><field name=\"MOTOR\">Crane</field><field name=\"DIRECTION\">fwd</field><field name=\"UNITS\">deg</field><field name=\"anddontwait_mutator\">true</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"^jVjHJiz[|cL)Rr4]LU)\"><field name=\"NUM\">415</field></shadow></value><next><block type=\"procedures_call\" id=\"{=9Lj#tH6H.B?A;EMx=e\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" proccode=\"Move Forward\" proceduredefid=\"n}6RyYfteZ99+?[fQ}Da\" argumentids=\"[]\" warp=\"false\"></mutation><next><block type=\"v5_control_wait\" id=\"BH@{%Hi:!R^$@Yc{`8Z+\"><value name=\"DURATION\"><shadow type=\"math_positive_number\" id=\"y~lSQ*k/7`(rez%BLA$Q\"><field name=\"NUM\">1.5</field></shadow></value><next><block type=\"procedures_call\" id=\"V[ws*ui,YB/pOrC?Jj]V\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" proccode=\"Stop Wheels\" proceduredefid=\"P}a!U3/*9|X*ha:@}tE8\" argumentids=\"[]\" warp=\"false\"></mutation><next><block type=\"v5_motion_spin\" id=\"pkC}6R_Fa@u@R]f]P4z/\"><field name=\"MOTOR\">Pusher</field><field name=\"DIRECTION\">rev</field><next><block type=\"v5_control_wait\" id=\"7$aHM,o57Uf6|.S,.e*Z\"><value name=\"DURATION\"><shadow type=\"math_positive_number\" id=\"i*5r+3N(V/9)_B{8?1;)\"><field name=\"NUM\">1.1</field></shadow></value><next><block type=\"v5_motion_spin\" id=\"md%p@M:_Zw8*eWFH)5*x\"><field name=\"MOTOR\">Pusher</field><field name=\"DIRECTION\">fwd</field><next><block type=\"v5_control_wait\" id=\"FX(TBaG^liy8OwtxvRtX\"><value name=\"DURATION\"><shadow type=\"math_positive_number\" id=\"M^b$g,X|.=!!Yod;Hwy`\"><field name=\"NUM\">1</field></shadow></value></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block><block type=\"v5_events_when_started\" id=\"sR8!4CthU_Eg91NYlN9!\" x=\"410\" y=\"510\"><next><block type=\"v5_motion_set_motor_velocity\" id=\"UmMgXK}DW{zZnl6h`b-O\"><field name=\"MOTOR\">Crane</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\":%KNYyeX5H*4OSzRy:Wk\"><field name=\"NUM\">60</field></shadow></value><next><block type=\"v5_motion_set_motor_velocity\" id=\"fmE,h!DRx/jK(4t`~Tzm\"><field name=\"MOTOR\">Pusher</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"9}k[jw81?|9WJIeNKO8+\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"v5_motion_set_motor_stopping\" id=\"f,*a88%pbO%t}2*)_Q!7\"><field name=\"MOTOR\">Crane</field><field name=\"MODE\">hold</field><next><block type=\"v5_motion_set_motor_stopping\" id=\"Lf,-UrtT{T_TvIK2w*6c\"><field name=\"MOTOR\">Pusher</field><field name=\"MODE\">hold</field><next><block type=\"v5_motion_set_motor_velocity\" id=\"M+o%*E9L!7QifX|.O]7%\"><field name=\"MOTOR\">LeftWheel</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"1u|s6{,iOQ_7QT?PKoc[\"><field name=\"NUM\">50</field></shadow></value><next><block type=\"v5_motion_set_motor_velocity\" id=\"_UrnubM|C6dau(qR.PZ:\"><field name=\"MOTOR\">RightWheel</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"3bYzhEq!zTt1W2xRTMcS\"><field name=\"NUM\">50</field></shadow></value></block></next></block></next></block></next></block></next></block></next></block></next></block></xml>","robotConfig":[{"port":[],"name":"Controller1","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"none","id":"primary"},"triportSourcePort":22},{"port":[1],"name":"LeftWheel","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[2],"name":"RightWheel","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[8],"name":"Pusher","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"Up","rev":"Down","gear":"ratio18_1"},"triportSourcePort":22},{"port":[3,10],"name":"Crane","customName":true,"deviceType":"MotorGroup","deviceClass":"motor_group","setting":{"fwd":"Up","rev":"Down","gear":"ratio18_1","motor_a_reversed":"true","motor_b_reversed":"false"},"triportSourcePort":22},{"port":[8],"name":"PusherLimitSwitch","customName":true,"deviceType":"LimitSwitch","deviceClass":"limit","setting":{"id":"partner"},"triportSourcePort":22},{"port":[7],"name":"CraneLimitSwitch","customName":true,"deviceType":"LimitSwitch","deviceClass":"limit","setting":{"id":"partner"},"triportSourcePort":22}],"slot":0,"platform":"V5","sdkVersion":"20240802.15.00.00","appVersion":"4.0.7","minVersion":"3.1.0","fileFormat":"2.0.0","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false,"downloadLanguage":"python","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\ncontroller Controller1 = controller(primary);\nmotor LeftWheel = motor(PORT1, ratio18_1, false);\n\nmotor RightWheel = motor(PORT2, ratio18_1, true);\n\nmotor Pusher = motor(PORT8, ratio18_1, true);\n\nmotor CraneMotorA = motor(PORT3, ratio18_1, true);\nmotor CraneMotorB = motor(PORT10, ratio18_1, false);\nmotor_group Crane = motor_group(CraneMotorA, CraneMotorB);\n\nlimit PusherLimitSwitch = limit(Brain.ThreeWirePort.H);\nlimit CraneLimitSwitch = limit(Brain.ThreeWirePort.G);\n\n\n// generating and setting random seed\nvoid initializeRandomSeed(){\n  int systemTime = Brain.Timer.systemHighResolution();\n  double batteryCurrent = Brain.Battery.current();\n  double batteryVoltage = Brain.Battery.voltage(voltageUnits::mV);\n\n  // Combine these values into a single integer\n  int seed = int(batteryVoltage + batteryCurrent * 100) + systemTime;\n\n  // Set the seed\n  srand(seed);\n}\n\n\n\nvoid vexcodeInit() {\n\n  //Initializing random seed.\n  initializeRandomSeed(); \n}\n\n\n\n\n// Helper to make playing sounds from the V5 in VEXcode easier and\n// keeps the code cleaner by making it clear what is happening.\nvoid playVexcodeSound(const char *soundName) {\n  printf(\"VEXPlaySound:%s\\n\", soundName);\n  wait(5, msec);\n}\n\n\n\n// Generated code.\n\n\n\n// define variable for remote controller enable/disable\nbool RemoteControlCodeEnabled = true;\n\n\n\n// Include the V5 Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\ncompetition Competition;\n\n// User defined function\nvoid myblockfunction_Move_Forward();\n// User defined function\nvoid myblockfunction_Stop_Wheels();\n\nfloat myVariable, YAxis, XAxis, Mach, StickMode, Stick2, Stick1;\n\nbool PusherMove, PusherMax, CraneMax;\n\nevent message1 = event();\nevent DriveMode = event();\nevent ScriptX = event();\nevent ScriptY = event();\n\n// User defined function\nvoid myblockfunction_Move_Forward() {\n  LeftWheel.spin(forward);\n  RightWheel.spin(forward);\n}\n\n// User defined function\nvoid myblockfunction_Stop_Wheels() {\n  LeftWheel.stop();\n  RightWheel.stop();\n}\n\n// \"when autonomous\" hat block\nint onauton_autonomous_0() {\n  Pusher.spin(forward);\n  Crane.spinFor(forward, 415.0, degrees, false);\n  myblockfunction_Move_Forward();\n  wait(1.5, seconds);\n  myblockfunction_Stop_Wheels();\n  Pusher.spin(reverse);\n  wait(1.1, seconds);\n  Pusher.spin(forward);\n  wait(1.0, seconds);\n  return 0;\n}\n\n// \"when started\" hat block\nint whenStarted1() {\n  Crane.setVelocity(60.0, percent);\n  Pusher.setVelocity(100.0, percent);\n  Crane.setStopping(hold);\n  Pusher.setStopping(hold);\n  LeftWheel.setVelocity(50.0, percent);\n  RightWheel.setVelocity(50.0, percent);\n  return 0;\n}\n\nvoid VEXcode_driver_task() {\n  // Start the driver control tasks....\n\n  while(Competition.isDriverControl() && Competition.isEnabled()) {this_thread::sleep_for(10);}\n\n  return;\n}\n\nvoid VEXcode_auton_task() {\n  // Start the auton control tasks....\n  vex::task auto0(onauton_autonomous_0);\n  while(Competition.isAutonomous() && Competition.isEnabled()) {this_thread::sleep_for(10);}\n  auto0.stop();\n  return;\n}\n\n\n\nint main() {\n  vex::competition::bStopTasksBetweenModes = false;\n  Competition.autonomous(VEXcode_auton_task);\n  Competition.drivercontrol(VEXcode_driver_task);\n\n  // Initializing Robot Configuration. DO NOT REMOVE!\n  vexcodeInit();\n\n  // post event registration\n\n  // set default print color to black\n  printf(\"\\033[30m\");\n\n  // wait for rotation sensor to fully initialize\n  wait(30, msec);\n\n  whenStarted1();\n}","target":"Physical"}